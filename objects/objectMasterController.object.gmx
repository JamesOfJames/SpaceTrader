<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriteMasterController</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Toggle Pause
if keyboard_check_pressed(vk_pause) or os_is_paused()
{if global.Paused == 0
 {x = median(0+view_hborder[0],objectParentPlayer.x,room_width-view_hborder[0]);
  y = median(0+view_vborder[0],objectParentPlayer.y,room_height-view_vborder[0]);
  //screen_save_part("paused.png",0,0,view_wview[0],view_hview[0]);
  visible = true;
  draw_set_alpha(1);
  //sprite_replace(spriteMasterController,working_directory+"paused.png", 1, false, false, view_wview[0]/2, view_hview[0]/2);
  view_object[0] = objectMasterController;
  global.Paused = 1;
  instance_deactivate_all(true);}
 else
 {visible = false;
  global.Paused = 0;
  instance_activate_all();
  view_object[0] = objectParentPlayer;}}
  
if global.Paused == 0
{global.Second += 60/room_speed;}
if global.Paused == 1
{}
if global.Paused == 2
{}

if global.Second &gt;= 60 {global.Minute += 1; global.Second -= 60;}
if global.Minute &gt;= 60 {global.Hour += 1; global.Minute -= 60;}
if global.Hour &gt; 24 {global.Day += 1; global.Hour -= 24;}
if global.Day &gt; 28 and (global.Year mod 4) == global.Year/4 and global.Month == 2 {global.Month += 1; global.Day -= 28;}
if global.Day &gt; 29 and (global.Year mod 4) != global.Year/4 and global.Month == 2 {global.Month += 1; global.Day -= 29;}
if global.Day &gt; 30 and (global.Month == 4 or global.Month == 6 or global.Month == 9 or global.Month == 11) {global.Month += 1; global.Day -= 30;}
if global.Day &gt; 31 and global.Month != 2 and global.Month != 4 and global.Month != 6 and global.Month != 9 and global.Month != 11 {global.Month += 1; global.Day -= 31;}
if global.Month &gt; 12 {global.Year += 1; global.Month -= 12;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="8">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DebugText</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*window_set_size(800, display_get_height()*(800/display_get_width()));
view_wview[0] = 800;
view_hview[0] = display_get_height()*(800/display_get_width());
display_set_gui_size(view_wview[0], view_hview[0]);*/

// Starfield Setup
var a, b;
for (a = 1; a &lt;= 3; a += 1)
{randomize();
 Starfield = part_system_create();
 Star = part_type_create();
 part_type_shape(Star, pt_shape_flare);
 part_type_direction(Star, 0, 360, 0, 0);
 part_type_orientation(Star, 0, 0, 0, 0, 1);
 part_type_color_hsv(Star, c_white, 85 * irandom(1), 0, 64, 64, 255);
 part_type_alpha1(Star, 1);
 part_type_size(Star, a, a, 0, 0);
 part_type_scale(Star, .05, .05);
 
 StarSurface = surface_create(view_wview[0], view_hview[0]);
 surface_set_target(StarSurface);
 draw_clear_alpha(c_black, 1);
// draw_set_blend_mode_ext(bm_inv_src_color, bm_inv_dest_color);
 
 for (b = 0; b &lt; (view_wview[0]*view_hview[0]*.004)/(a*a); b += 1)
 {part_particles_create(Starfield, random(view_wview[0]), random(view_hview[0]), Star, 1);}
 part_system_drawit(Starfield);
/* draw_rectangle
 draw_set_blend_mode_ext(bm_src_alpha, bm_zero);
 
 draw_set_blend_mode(bm_subtract);
 
 draw_set_blend_mode(bm_add); */
 background_index[a] = background_create_from_surface(StarSurface, 0, 0, surface_get_width(StarSurface), surface_get_height(StarSurface), true, false);
 background_htiled[a] = true;
 background_vtiled[a] = true;
 background_alpha[a] = .5; 
 background_visible[a] = true;
 surface_free(StarSurface);
 part_system_clear(Starfield);}

surface_reset_target();


//global.Directory = "C:\Users\"+environment_get_variable("UserName")+"\AppData\Local\HyperWave\" // Kludgey, but you know where it's going to be!
global.Directory = "";
scriptLoadPlayer();
randomize();

global.Second = irandom(60);
global.Minute = irandom(60);
global.Hour = irandom_range(1, 24);
global.Day = irandom_range(1, 28);
global.Month = irandom_range(1, 12);
global.Year = 2368;

global.MonthName[0] = "ERR";
global.MonthName[1] = "Jan";
global.MonthName[2] = "Feb";
global.MonthName[3] = "Mar";
global.MonthName[4] = "Apr";
global.MonthName[5] = "May";
global.MonthName[6] = "Jun";
global.MonthName[7] = "Jul";
global.MonthName[8] = "Aug";
global.MonthName[9] = "Sep";
global.MonthName[10] = "Oct";
global.MonthName[11] = "Nov";
global.MonthName[12] = "Dec";

global.CurrentSystem = "4272 Mensae";

var inst;
 inst = instance_create(room_width/2, room_height/2, ds_grid_get(global.PlayerData, 0, ObjectC));
 with (inst)
 {view_object[0] = inst.id;}  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.InventoryWindow == true
{draw_set_color(c_white);
 draw_roundrect_color(view_xport[0]+96, view_yport[0]+96, (view_xport[0]+view_wport[0]-96), (view_yport[0]+view_hport[0]-96), c_gray, c_dkgray, false);
 draw_text(view_xport[0]+(view_wport[0]/2), view_yport[0]+128, "Inventory");
 var i;
 for (i = 1; i &lt; 13; i += 1)
 {draw_text(view_xport[0]+view_wport[0]/2, view_yport[0]+128+(i*24), string(i)+": "+string(ds_list_read(global.MonthName, i))+" HP: "+string(ds_grid_get(global.PlayerData, i, HealthC))+"/"+string(ds_grid_get(global.PlayerData, i, MaxHealthC)));}} // Print player data

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.Paused == 1
{draw_set_font(fontRighteous32Pt);
 draw_set_halign(fa_center);
 //draw_text_color(x, y, "Paused", c_gray, c_silver, c_gray, c_dkgray, 1); // draw_text_color only uses 1 color in html5}
 draw_set_color(c_silver);
 draw_set_alpha(1);
 draw_text(x, y, "Paused");}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
