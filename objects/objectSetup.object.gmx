<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Setup
randomize();
image_speed = 0;

global.wPort = view_wport[0];
global.hPort = view_hport[0];

/*
0) Create Galaxy (macro movment grid between systems)
1) Create Commodity List (parse basic economic data on tradable goods)
2) Create Initial System (create table with basic info about the planets in the first room)
  // Add in a check - if no planets are habitable, then reroll the whole system.
3) Setup Player's ship (set a size, for now, and cargo space, but will be able to upgrade size and adjust how much mass is used for engine vs. cargo space.)
  // Note - when the player buys commodities, record the galX and galY where bought.  The more jumps that are made before sold, the more they should be payoff.  Intrasystem sales should pay very poorly.
4) Setup Other Ships
5) Setup Other People
6) Setup Player
7) Go to the initial system room and setup those planets?
  // check neighbors too.
  // should the planet's data stay in a list after object creation, or should it be purged?
*/


// Setup Variables
displayText = "Creating Galaxy..."
show_debug_message(displayText);
nextStep = 0;
stepBegun = false;
gameSetup = false; // switch to true once the game is ready &amp; the first system is ready

// Galactic Variables
galX = 1;
galY = 1;
galH = 3;
galW = 3;

// System Variables
plCommodities = 5; // Each planet will produce this many trade goods, by default.
firstOrbit = 1000; // Inner planet's orbit in px
var a = script_execute(scriptDiceRoll, 3);
switch a
{case 3:
 case 4:
   orbitRatio = 1.4;
   break;
 case 5:
 case 6:
   orbitRatio = 1.5;
   break;
 case 7:
 case 8:
   orbitRatio = 1.6;
   break;
 case 9:
 case 10:
 case 11:
 case 12:
   orbitRatio = 1.7;
   break;
 case 13:
 case 14:
   orbitRatio = 1.8;
   break;
 case 15:
 case 16:
   orbitRatio = 1.9;
   break;
 case 17:
 case 18:
   orbitRatio = 2.0;
   break;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*// Starfield Setup
var a, b;
for (a = 1; a &lt;= 3; a += 1)
{randomize();
 Starfield = part_system_create();
 Star = part_type_create();
 part_type_shape(Star, pt_shape_flare);
 part_type_direction(Star, 0, 360, 0, 0);
 part_type_orientation(Star, 0, 0, 0, 0, 1);
 part_type_color_hsv(Star, c_white, 85 * irandom(1), 0, 64, 64, 255);
 part_type_alpha1(Star, 1);
 part_type_size(Star, a, a, 0, 0);
 part_type_scale(Star, .05, .05);
 
 StarSurface = surface_create(view_wview[0], view_hview[0]);
 surface_set_target(StarSurface);
 draw_clear_alpha(c_black, 1);
 
 for (b = 0; b &lt; (view_wview[0]*view_hview[0]*.004)/(a*a); b += 1)
 {part_particles_create(Starfield, random(view_wview[0]), random(view_hview[0]), Star, 1);}
 part_system_drawit(Starfield);
 background_index[a] = background_create_from_surface(StarSurface, 0, 0, surface_get_width(StarSurface), surface_get_height(StarSurface), true, false);
 background_htiled[a] = true;
 background_vtiled[a] = true;
 background_alpha[a] = .5; 
 background_visible[a] = true;
 surface_free(StarSurface);
 part_system_clear(Starfield);}

surface_reset_target();


/*global.Directory = "";
scriptLoadPlayer();
randomize();

global.Second = irandom(60);
global.Minute = irandom(60);
global.Hour = irandom_range(1, 24);
global.Day = irandom_range(1, 28);
global.Month = irandom_range(1, 12);
global.Year = 2368;

global.MonthName[0] = "ERR";
global.MonthName[1] = "Jan";
global.MonthName[2] = "Feb";
global.MonthName[3] = "Mar";
global.MonthName[4] = "Apr";
global.MonthName[5] = "May";
global.MonthName[6] = "Jun";
global.MonthName[7] = "Jul";
global.MonthName[8] = "Aug";
global.MonthName[9] = "Sep";
global.MonthName[10] = "Oct";
global.MonthName[11] = "Nov";
global.MonthName[12] = "Dec";

global.CurrentSystem = "4272 Mensae";

var inst;
 inst = instance_create(room_width/2, room_height/2, ds_grid_get(global.PlayerData, 0, ObjectC));
 with (inst)
 {view_object[0] = inst.id;}  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Center view on ship

var a = instance_find(objectPlayerShip, 0);
if a != noone
{view_xview[0] = a.x - (view_wview[0] / 2);
 view_yview[0] = a.y - (view_hview[0] / 2);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="8">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Launching Ship...

instance_create(0,0,objectPlayerShip);
instance_create(0,0,objectAIShip);

// Setup Variables
displayText = "All Done..."
show_debug_message(displayText);
nextStep++;
stepBegun = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Coalescing Cosmic Dust...

galPlanets = ds_grid_create(29, 1);
ds_grid_clear(galPlanets, -1);

script_execute(scriptNewSystem);

// Setup Variables
displayText = "Launching Ship..."
show_debug_message(displayText);
nextStep++;
stepBegun = false;

gameSetup = true;
room_goto(currentSys); // We've laid the groundwork; let's create a system!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Establishing the Commodities Exchange...

commRawData = ds_queue_create();

ds_queue_enqueue(commRawData, "Heavy Metals, 800000, 4, 10% Ex, -3$ biohazard, 5");
ds_queue_enqueue(commRawData, "Grain/Flour/Baked Goods, 500, 6, 10% Ag, -2, Ex, 2, Na, 2, As, 1$");
ds_queue_enqueue(commRawData, "Radioactives, 100000, 1, 10% In, 4, Na, -3, Ni, -2, Pe, -1$ biohazard, 8");
ds_queue_enqueue(commRawData, "Chemicals, 500, 3, 100% In, 1, Na, -4$ biohazard, 6, volatile, 6");
ds_queue_enqueue(commRawData, "Artwork/Antiques, 50000, 1, 1% Po, -2$ fragile, 8, controlled, 6");
ds_queue_enqueue(commRawData, "Wood/Paper, 400, 3, 50% Ag, -4, In, 1, Ex, 4$");
ds_queue_enqueue(commRawData, "Industrial Metals, 6000, 2, 25% Ex, -2$");
ds_queue_enqueue(commRawData, "Ceramics/Glass, 1500, 2, 10% $ fragile, 12");
ds_queue_enqueue(commRawData, "Gems/Precious Metals, 10000000, 1 1% In, 1, Ni, -2, Ri, 1$");
ds_queue_enqueue(commRawData, "Spices/Oils, 8000, 3, 5% Ag, -2, Ex, 1, Ni, -1, As, 1$");
ds_queue_enqueue(commRawData, "Liquor/Stimulants, 10000, 2, 7% Ag, -3, Ex, 1, In, 1, As, 2$ fragile, 8, controlled, 8");
ds_queue_enqueue(commRawData, "Fruits/Vegetables/Nuts, 500, 4, 50% Ag, -2, In, 3, Ex, 2, Na, 2$");
ds_queue_enqueue(commRawData, "Special Minerals/Special Crystals, 75000, 1, 10% In, 1, Na, -3$");
ds_queue_enqueue(commRawData, "Livestock, 6000, 5, 2% Ri, -2, As, -2$ biohazard, 5, controlled, 8, live, 18");
ds_queue_enqueue(commRawData, "Polymers, 2500, 3, 25% In, -2$");
ds_queue_enqueue(commRawData, "Light Metals, 2000, 2, 125% $");
ds_queue_enqueue(commRawData, "Textiles/Clothing, 7500, 3, 20% Ag, -2, Ex, 2, In, -1$");
ds_queue_enqueue(commRawData, "Fish/Meat, 4000, 1, 40% Ag, -2, In, 2, Ex, 2, Na, 2$");
ds_queue_enqueue(commRawData, "Survival Equipment/Life-Support Equipment, 40000, 3, 5% Ex, 1, In, -1, Na, 2, As, 2$");
ds_queue_enqueue(commRawData, "Computers, 500000, 2, 5% In, -2$");
ds_queue_enqueue(commRawData, "Ammunition, 100000, 1, 7% Mi, 3, Pe, -3$ controlled, 14, volatile, 18");
ds_queue_enqueue(commRawData, "Software/Prerecorded Media, 25000, 3, 1% Ex, 1, Ni, 2$ controlled, 6");
ds_queue_enqueue(commRawData, "Mechanical Parts/Tools, 10000, 8, 50% In, -1, Ni, 1$");
ds_queue_enqueue(commRawData, "Pharmaceuticals, 1000000, 6, 1% Ag, -1, In, 3, Ni, -3$ fragile, 8");
ds_queue_enqueue(commRawData, "Environment Suits, 200000, 1, 2% Ag, -4, Ex, 4, In, -2, Ni, 1$");
ds_queue_enqueue(commRawData, "Robots, 600000, 1, 10% Ex, 2, In, -1$ controlled, 7");
ds_queue_enqueue(commRawData, "Consumer Goods, 6000, 3, 10% Ex, 2, In, -1, Ni, 1$");
ds_queue_enqueue(commRawData, "Farm Machinery, 20000, 1, 50% Ag, 2, Ex, -1, In, -2, Na, -2$");
ds_queue_enqueue(commRawData, "Bio-Tech, 200000, 3, 1% Ag, 1$ biohazard, 6, live, 8, controlled, 8");
ds_queue_enqueue(commRawData, "Scrap/Junk/Waste Products, 100, 2, 50% In, -4, Ri, -2, Po, 2$ biohazard, 7");
ds_queue_enqueue(commRawData, "Scientific Equipment, 500000, 2, 7% In, -3, Ni, 3$ fragile, 8");
ds_queue_enqueue(commRawData, "Electronic Parts, 50000, 1, 10% In, -1, Ni, 1$");
ds_queue_enqueue(commRawData, "Surface Vehicles, 15000, 8, 5% In, -2, Ni, 2, As, -2$ controlled, 6");
ds_queue_enqueue(commRawData, "Aircraft, 1000000, 6, 10% In, -2, Ni, 2, As, -3$ controlled, 8");
ds_queue_enqueue(commRawData, "Weapons, 100000, 3, 10% In, -2, Mi, 2, Ni, 2, Pe, -3$ biohazard, 5, controlled, 14");
ds_queue_enqueue(commRawData, "Nanotech, 500000, 2, 5% In, -3, Mi, 1, Ni, 2, Pe, -1$ biohazard, 7, controlled, 9");

commList = ds_grid_create(20, ds_queue_size(commRawData));
script_execute(scriptCommSetup);
 
// Setup Variables
displayText = "Coalescing Cosmic Dust..."
show_debug_message(displayText);
nextStep++;
stepBegun = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Creating Galaxy...

galRooms =  ds_grid_create(galW, galH);
ds_grid_clear(galRooms, -1);

/// Create Solar System
currentSys = script_execute(scriptNewRoom, galX, galY);

// Setup Variables
displayText = "Establishing the Commodities Exchange..."
show_debug_message(displayText);
nextStep++;
stepBegun = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Room Setup

room_speed = 60;

// do "is this the first time in a new system?" stuff

if gameSetup
{view_wview[0] = global.wPort;
 view_hview[0] = global.hPort;

 script_execute(scriptCheckNeighbors);
 if !instance_exists(objectStar) // Is there a star?  If not, the room has not been set up.
 {currentStar = instance_create(0, 0, objectStar);}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start Next Step
if !stepBegun
{stepBegun = true;
 event_user(nextStep);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Show which setup step

if !gameSetup
{draw_set_font(font_ui);
 draw_set_halign(fa_center);
 draw_set_valign(fa_middle);
 draw_set_colour(c_white);
 draw_text(view_wview[0] / 2, view_hview[0] / 2, displayText);}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Galactic minimap
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Paused

if global.Paused == 1
{draw_set_font(fontRighteous32Pt);
 draw_set_halign(fa_center);
 //draw_text_color(x, y, "Paused", c_gray, c_silver, c_gray, c_dkgray, 1); // draw_text_color only uses 1 color in html5}
 draw_set_color(c_silver);
 draw_set_alpha(1);
 draw_text(x, y, "Paused");}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inventory

if global.InventoryWindow == true
{draw_set_color(c_white);
 draw_roundrect_color(view_xport[0]+96, view_yport[0]+96, (view_xport[0]+view_wport[0]-96), (view_yport[0]+view_hport[0]-96), c_gray, c_dkgray, false);
 draw_text(view_xport[0]+(view_wport[0]/2), view_yport[0]+128, "Inventory");
 var i;
 for (i = 1; i &lt; 13; i += 1)
 {draw_text(view_xport[0]+view_wport[0]/2, view_yport[0]+128+(i*24), string(i)+": "+string(ds_list_read(global.MonthName, i))+" HP: "+string(ds_grid_get(global.PlayerData, i, HealthC))+"/"+string(ds_grid_get(global.PlayerData, i, MaxHealthC)));}} // Print player data

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// view_x &amp; y

draw_set_font(font_ui);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_colour(c_white);
var a = instance_find(objectPlayerShip, 0);
if a != noone
{draw_text(32, 32, "view: " + string(view_wview[0]) + ", " + string(view_hview[0]) + "#ship: " + string(a.x) + ", " + string(a.y));}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
