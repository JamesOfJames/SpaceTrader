<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup

// How many degrees to orbit each step
angleChangePerStep = 0;

// Random name for now
planName = script_execute(scriptRandomName);

// Set up random inventory values for commodities for now
money = 1000000000;
objSet = instance_find(objectSetup, 0);
commodities = ds_grid_create(2, ds_grid_height(objSet.commList));
ds_grid_clear(commodities, 50);
var a;
for (a = 0; a &lt; ds_grid_height(objSet.commList); a++) {ds_grid_set(commodities, 0, a, irandom(20) + irandom(20) + irandom(20) + irandom(20) + irandom(20));}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup

ds_grid_destroy(commodities);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update position in orbit

steps = objSet.steps;
x = lengthdir_x(plOrbit, plAngle + (steps * angleChangePerStep * 2000));
y = lengthdir_y(plOrbit, plAngle + (steps * angleChangePerStep * 2000));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Docked?

var a;
a = collision_circle(x, y, planRadius, objectShip, yes, true);

if a != noone
{if a.dockedWith = noone
 {if a.undocking &lt;= 0
  {with a
   {dockedWith = other;
    dockDistance = point_distance(x, y, other.x, other.y);
    dockAngle = point_direction(x, y, other.x, other.y);
    dockAngleChange = speed;}}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Interpret Setup

if setup
{sysID = room;
 planRadius = 8 * power(2, plSize);
 x = lengthdir_x(plOrbit, plAngle);
 y = lengthdir_y(plOrbit, plAngle);
 switch (plType)
 {case Ammonia:
    planColorA = c_lime;
    planColorB = c_green;
    break;
  case Asteroid:
    planColorA = c_silver;
    planColorB = c_gray;
    break;
  case Chthonian:
    planColorA = c_red;
    planColorB = c_maroon;
    break;
  case Garden:
    planColorA = c_green;
    planColorB = c_navy;
    break;
  case Greenhouse:
    planColorA = c_orange;
    planColorB = c_olive;
    break;
  case Hadean:
    planColorA = c_aqua;
    planColorB = c_teal;
    break;
  case Ice:
    planColorA = c_silver;
    planColorB = c_ltgray;
    break;
  case Ocean:
    planColorA = c_blue;
    planColorB = c_navy;
    break;
  case Rock:
    planColorA = c_gray;
    planColorB = c_dkgray;
    break;
  case Sulfur:
    planColorA = c_yellow;
    planColorB = c_orange;
    break;}
 
 angleChangePerStep = 1 / sqrt(power(plOrbit, 3) / objStar.starMass)
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup

ds_grid_destroy(commodities);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mommy's Lil' Helper

// Inherit the properties of the corresponding code action of the parent object.
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Radar Blip

if instance_number(objectPlayerShip) &gt; 0
{script_execute(scriptRadarNew);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Planet

if setup
{draw_circle_colour(x, y, planRadius, planColorA, planColorB, false);
 draw_set_font(fontCranberryGin16pt);
 draw_set_colour(c_white);
 draw_set_halign(fa_center);
 draw_set_valign(fa_middle);
 draw_text(x, y + planRadius + 32, planName);}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ***Display Trading Window
/*
player = instance_find(objectPlayerShip, 0);

if player != noone
{playerX = player.x;
 playerY = player.y;
 
 if player.dockedWith == id
 {draw_set_alpha(0.75);
  draw_roundrect_color_ext(x - 128, y + planRadius + 64, x + 128, y + planRadius + 192, 8, 8, c_dkgray, c_gray, false);
  var a, b;
  b = y + planRadius + 80;
  for (a = 0; a &lt; array_length_1d(Res); a++)
  {draw_text(x, b, string(ds_grid_get(objSet.commList, 10, Res[a])));
   b = b + 16;}
  draw_set_alpha(1);}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
