<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriteMine</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>objectParentMunition</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

Health = 1; // Health at 100%
script_execute(scriptLoadShip, 'Mine');

// Initializtion
image_speed = 0.25; // Animate Slowly
RotationDegrees = 10; // Degrees between frames of the sprite's rotation
DeltaV = .15; // Engine Power - acceleration &amp; deceleration
DetectionRange = 400; // Distance when movement will activate

Damage = 0;
var a;
for (a = 0; a &lt; ds_grid_width(Data); a += 1)
{if ds_grid_get(Data, a, ActiveC) == 1 and ds_grid_get(Data, a, TriggeredOnCollisionC) == 1 {Damage += script_execute(scriptDamageRoll, ds_grid_get(Data, a, DamageRollC));}}

BypassShields = false; // Don't bypass shields
ShieldDamageRate = 1; // Damage shields at usual rate
ArmorDamageRate = 1; // Damage armor at usual rate
HullDamageRate = 1; // Damage hull at usual rate
direction = irandom(359) // Set initial direction to random
Facing = direction;

Collided = false;
Shooter = noone;
Dead = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var a;
a = instance_find(objectParentPlayer, 0);

if point_distance(x, y, a.x, a.y) &lt; DetectionRange and a.Dead == false // When distance between player and mine is less than mine's detection range
{speed += DeltaV; // Speed up
 move_towards_point(a.x, a.y, speed); // Move towards the player's current position
 image_speed = 0.5;} // Animate Fast
else
{if speed &gt;= DeltaV // If the speed is greater than the mine's acceleration
 {speed -= DeltaV;} // Slow Down
  else
 {speed = 0;} // Stop
 image_speed = 0.25;} // Animate Slow
 
 Health = ds_grid_get(Data, 0, HealthC);
 
if Health &lt;= 0 // When Health is gone
{Dead = true;
 effect_create_above(ef_explosion, x, y, 1, c_orange);
 if !Collided 
 {var i, j
 for (i = irandom_range(1, 5); i &gt; 0; i -= 1) // Create objectMoney drops, set their Money variable to 50-250.
 {j = instance_create(x, y, objectMoney);
  with (j)
  {direction = (random(360) + other.direction) / 2;
   speed = (other.speed / 2)+(random(1)+.5);
   Money = irandom_range(50, 250);}}}
 instance_destroy();} // Destroy
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>60,60</point>
    <point>60,60</point>
  </PhysicsShapePoints>
</object>
